
package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProductoController", targetNamespace = "http://controller/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProductoController {


    /**
     * 
     * @param precio
     * @param name
     * @param cantidad
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addProduct", targetNamespace = "http://controller/", className = "ws.AddProduct")
    @ResponseWrapper(localName = "addProductResponse", targetNamespace = "http://controller/", className = "ws.AddProductResponse")
    @Action(input = "http://controller/ProductoController/addProductRequest", output = "http://controller/ProductoController/addProductResponse")
    public String addProduct(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "cantidad", targetNamespace = "")
        int cantidad,
        @WebParam(name = "precio", targetNamespace = "")
        double precio);

    /**
     * 
     * @param code
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProduct", targetNamespace = "http://controller/", className = "ws.GetProduct")
    @ResponseWrapper(localName = "getProductResponse", targetNamespace = "http://controller/", className = "ws.GetProductResponse")
    @Action(input = "http://controller/ProductoController/getProductRequest", output = "http://controller/ProductoController/getProductResponse")
    public String getProduct(
        @WebParam(name = "code", targetNamespace = "")
        int code);

    /**
     * 
     * @param code
     * @param saldoUsuario
     * @param cantidad
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sellProduct", targetNamespace = "http://controller/", className = "ws.SellProduct")
    @ResponseWrapper(localName = "sellProductResponse", targetNamespace = "http://controller/", className = "ws.SellProductResponse")
    @Action(input = "http://controller/ProductoController/sellProductRequest", output = "http://controller/ProductoController/sellProductResponse")
    public String sellProduct(
        @WebParam(name = "code", targetNamespace = "")
        int code,
        @WebParam(name = "cantidad", targetNamespace = "")
        int cantidad,
        @WebParam(name = "saldoUsuario", targetNamespace = "")
        double saldoUsuario);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProducts", targetNamespace = "http://controller/", className = "ws.GetProducts")
    @ResponseWrapper(localName = "getProductsResponse", targetNamespace = "http://controller/", className = "ws.GetProductsResponse")
    @Action(input = "http://controller/ProductoController/getProductsRequest", output = "http://controller/ProductoController/getProductsResponse")
    public String getProducts();

    /**
     * 
     * @param code
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPrecio", targetNamespace = "http://controller/", className = "ws.GetPrecio")
    @ResponseWrapper(localName = "getPrecioResponse", targetNamespace = "http://controller/", className = "ws.GetPrecioResponse")
    @Action(input = "http://controller/ProductoController/getPrecioRequest", output = "http://controller/ProductoController/getPrecioResponse")
    public String getPrecio(
        @WebParam(name = "code", targetNamespace = "")
        int code);

}
